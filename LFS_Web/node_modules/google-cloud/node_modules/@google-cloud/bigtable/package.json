{
  "_args": [
    [
      "@google-cloud/bigtable@https://registry.npmjs.org/@google-cloud/bigtable/-/bigtable-0.5.0.tgz",
      "D:\\lfs\\LFS_Web\\node_modules\\google-cloud"
    ]
  ],
  "_from": "@google-cloud/bigtable@>=0.5.0 <0.6.0",
  "_id": "@google-cloud/bigtable@0.5.0",
  "_inCache": true,
  "_location": "/google-cloud/@google-cloud/bigtable",
  "_phantomChildren": {
    "is-obj": "1.0.1"
  },
  "_requested": {
    "name": "@google-cloud/bigtable",
    "raw": "@google-cloud/bigtable@https://registry.npmjs.org/@google-cloud/bigtable/-/bigtable-0.5.0.tgz",
    "rawSpec": "https://registry.npmjs.org/@google-cloud/bigtable/-/bigtable-0.5.0.tgz",
    "scope": "@google-cloud",
    "spec": "https://registry.npmjs.org/@google-cloud/bigtable/-/bigtable-0.5.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/google-cloud"
  ],
  "_resolved": "https://registry.npmjs.org/@google-cloud/bigtable/-/bigtable-0.5.0.tgz",
  "_shasum": "2ec0e0c619b7b9dac1b1db74af18eece3a11e3a5",
  "_shrinkwrap": null,
  "_spec": "@google-cloud/bigtable@https://registry.npmjs.org/@google-cloud/bigtable/-/bigtable-0.5.0.tgz",
  "_where": "D:\\lfs\\LFS_Web\\node_modules\\google-cloud",
  "author": {
    "name": "Google Inc."
  },
  "bugs": {
    "url": "https://github.com/googlecloudplatform/google-cloud-node/issues"
  },
  "contributors": [
    {
      "email": "jbd@google.com",
      "name": "Burcu Dogan"
    },
    {
      "email": "proppy@google.com",
      "name": "Johan Euphrosine"
    },
    {
      "email": "pcostell@google.com",
      "name": "Patrick Costello"
    },
    {
      "email": "ryan@ryanseys.com",
      "name": "Ryan Seys"
    },
    {
      "email": "silvano@google.com",
      "name": "Silvano Luciani"
    },
    {
      "email": "sawchuk@gmail.com",
      "name": "Stephen Sawchuk"
    }
  ],
  "dependencies": {
    "@google-cloud/common": "^0.7.0",
    "arrify": "^1.0.0",
    "concat-stream": "^1.5.0",
    "create-error-class": "^3.0.2",
    "dot-prop": "^3.0.0",
    "extend": "^3.0.0",
    "google-proto-files": "^0.8.0",
    "is": "^3.0.1",
    "lodash.flatten": "^4.2.0",
    "node-int64": "^0.4.0",
    "prop-assign": "^1.0.0",
    "pumpify": "^1.3.3",
    "string-format-obj": "^1.0.0",
    "through2": "^2.0.0"
  },
  "description": "Google Cloud Bigtable Client Library for Node.js",
  "devDependencies": {
    "async": "^2.0.1",
    "methmeth": "^1.0.0",
    "mocha": "^3.0.1",
    "node-uuid": "^1.4.3",
    "proxyquire": "^1.7.10",
    "sinon": "^1.17.4"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "files": [
    "src",
    "AUTHORS",
    "CONTRIBUTORS",
    "COPYING"
  ],
  "homepage": "https://github.com/googlecloudplatform/google-cloud-node#readme",
  "keywords": [
    "google apis client",
    "google api client",
    "google apis",
    "google api",
    "google",
    "google cloud platform",
    "google cloud",
    "cloud",
    "google bigtable",
    "bigtable"
  ],
  "license": "Apache-2.0",
  "main": "./src/index.js",
  "name": "@google-cloud/bigtable",
  "optionalDependencies": {},
  "readme": "# @google-cloud/bigtable\n> Google Cloud Bigtable Client Library for Node.js\n\n*Looking for more Google APIs than just Bigtable? You might want to check out [`google-cloud`][google-cloud].*\n\n- [API Documentation][gcloud-bigtable-docs]\n- [Official Documentation][cloud-bigtable-docs]\n\n*You may need to [create a cluster][cloud-bigtable-cluster] to use the Google Cloud Bigtable API with your project.*\n\n\n```sh\n$ npm install --save @google-cloud/bigtable\n```\n```js\nvar bigtable = require('@google-cloud/bigtable')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n\nvar instance = bigtable.instance('my-instance');\nvar table = instance.table('prezzy');\n\ntable.getRows(function(err, rows) {});\n\n// Update a row in your table.\nvar row = table.row('alincoln');\n\nrow.save('follows:gwashington', 1, function(err) {\n  if (err) {\n    // Error handling omitted.\n  }\n\n  row.get('follows:gwashington', function(err, data) {\n    if (err) {\n      // Error handling omitted.\n    }\n\n    // data = {\n    //   follows: {\n    //     gwashington: [\n    //       {\n    //         value: 1\n    //       }\n    //     ]\n    //   }\n    // }\n  });\n});\n\n// Promises are also supported by omitting callbacks.\ntable.getRows().then(function(data) {\n  var rows = data[0];\n});\n\n// It's also possible to integrate with third-party Promise libraries.\nvar bigtable = require('@google-cloud/bigtable')({\n  promise: require('bluebird')\n});\n```\n\n\n## Authentication\n\nIt's incredibly easy to get authenticated and start using Google's APIs. You can set your credentials on a global basis as well as on a per-API basis. See each individual API section below to see how you can auth on a per-API-basis. This is useful if you want to use different accounts for different Google Cloud services.\n\n### On Google Compute Engine\n\nIf you are running this client on Google Compute Engine, we handle authentication for you with no configuration. You just need to make sure that when you [set up the GCE instance][gce-how-to], you add the correct scopes for the APIs you want to access.\n\n``` js\n// Authenticating on a global basis.\nvar projectId = process.env.GCLOUD_PROJECT; // E.g. 'grape-spaceship-123'\n\nvar bigtable = require('@google-cloud/bigtable')({\n  projectId: projectId\n});\n\n// ...you're good to go!\n```\n\n### Elsewhere\n\nIf you are not running this client on Google Compute Engine, you need a Google Developers service account. To create a service account:\n\n1. Visit the [Google Developers Console][dev-console].\n2. Create a new project or click on an existing project.\n3. Navigate to  **APIs & auth** > **APIs section** and turn on the following APIs (you may need to enable billing in order to use these services):\n  * Cloud Bigtable API\n  * Cloud Bigtable Admin API\n  * Cloud Bigtable Table Admin API\n4. Navigate to **APIs & auth** >  **Credentials** and then:\n  * If you want to use a new service account, click on **Create new Client ID** and select **Service account**. After the account is created, you will be prompted to download the JSON key file that the library uses to authenticate your requests.\n  * If you want to generate a new key for an existing service account, click on **Generate new JSON key** and download the JSON key file.\n\n``` js\nvar projectId = process.env.GCLOUD_PROJECT; // E.g. 'grape-spaceship-123'\n\nvar bigtable = require('@google-cloud/bigtable')({\n  projectId: projectId,\n\n  // The path to your key file:\n  keyFilename: '/path/to/keyfile.json'\n\n  // Or the contents of the key file:\n  credentials: require('./path/to/keyfile.json')\n});\n\n// ...you're good to go!\n```\n\n\n[google-cloud]: https://github.com/GoogleCloudPlatform/google-cloud-node\n[gce-how-to]: https://cloud.google.com/compute/docs/authentication#using\n[dev-console]: https://console.developers.google.com/project\n[gcloud-bigtable-docs]: https://googlecloudplatform.github.io/google-cloud-node/#/docs/bigtable\n[cloud-bigtable-docs]: https://cloud.google.com/bigtable/docs\n[cloud-bigtable-cluster]: https://cloud.google.com/bigtable/docs/creating-compute-instance\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/googlecloudplatform/google-cloud-node.git"
  },
  "scripts": {
    "publish-module": "node ../../scripts/publish.js bigtable",
    "system-test": "mocha system-test/*.js --no-timeouts --bail",
    "test": "mocha test/*.js"
  },
  "version": "0.5.0"
}
